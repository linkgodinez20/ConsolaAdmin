@model Security.Core.Model.Domicilios

@{
    ViewBag.Title = "Domicilio/Nuevo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-2.1.3.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#Id_Pais").on('change', function (e) {
            var idp = $(this).val();

            e.preventDefault();
            
            $("#Id_Entidad").empty();
            
            $("#Id_Municipio").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetEntidades", "Domicilios")',
                dataType: 'json',
                traditional: true,
                contentType: "application/json; charset=utf-8",
                data: "{'IdPais':" + idp + "}",
                success: function (entidades) {

                    $.each(entidades, function (i, entidad) {
                        $("#Id_Entidad").append('<option value="' + entidad.Value + '">' +
                         entidad.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Falla al cargar las entidades.' + ex);
                }
            });
            return false;
        })
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#Id_Entidad").on('change', function (e) {
            var idEnt = $(this).val();
            alert(idEnt);
            e.preventDefault();
            $("#Id_Municipio").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMunicipios", "Domicilios")',
                dataType: 'json',
                traditional: true,
                contentType: "application/json; charset=utf-8",
                data: "{'IdEntidad':" + idEnt + "}",

                success: function (municipios) {

                    $.each(municipios, function (i, municipio) {
                        $("#Id_Municipio").append('<option value="' + municipio.Value + '">' + municipio.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Falla al cargar los municipios.' + ex);
                }
            });
            return false;
        })
    });
</script>
 
<h2 class="Titulo">Nuevo</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Domicilio</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Id_ContactoTipo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Id_ContactoTipo", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_ContactoTipo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Domicilio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Domicilio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Domicilio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeroExterior, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroExterior, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroExterior, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeroInterior, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroInterior, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroInterior, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_Pais, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Id_Pais", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_Pais, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_Entidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("Id_Entidad", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownList("Id_Entidad", new SelectList(string.Empty, "Value", "Text"), "Elija una opción", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_Entidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_Municipio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("Id_Municipio", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownList("Id_Municipio", new SelectList(string.Empty, "Value", "Text"), "Elija una opción", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_Municipio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Colonia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Colonia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Colonia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EntreCalle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EntreCalle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EntreCalle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.YCalle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YCalle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YCalle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Estatus)
                    @Html.ValidationMessageFor(model => model.Estatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" value="create" class="btn btn-success">
                    <i class="glyphicon glyphicon-ok"></i>
                </button>
                @Html.ActionLink(" ", "Index", null, new { @class = "btn btn-info glyphicon glyphicon-chevron-left" })
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")
}
