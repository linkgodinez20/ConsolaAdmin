@model Security.Core.Model.Sesiones

@Scripts.Render("~/bundles/Miscelaneous")

@{
    ViewBag.Title = "Sesión / Editar";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<div class="modal-header label-warning">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hitden="true">&times;</span></button>

    <h2 class="modal-title">Editar</h2>

    <h4 class="Fuente_blanca">Sesiones</h4>
</div>


@using (Html.BeginForm())
{
    <div class="modal-body">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.HiddenFor(model => model.Id_Sesion, htmlAttributes: new { id = "Id_Sesion" })
            @Html.HiddenFor(model => model.Identificador)
            @Html.HiddenFor(model => model.Id_Cuenta, htmlAttributes: new { id = "idCuenta" })
            @Html.HiddenFor(model => model.Id_Sistema, htmlAttributes: new { id = "idSistema" })


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Id_Cuenta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownList("Id_Cuenta", new SelectList(string.Empty, "Id_Cuenta", "Cuenta"), htmlAttributes: new { @class = "form-control", @readonly = "readonly" })*@
                    @Html.TextBox("txt_Cuenta", null, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Id_Cuenta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaHoraInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FechaHoraInicio, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OnLine, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.OnLine)
                        @Html.ValidationMessageFor(model => model.OnLine, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CierreSesion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.CierreSesion)
                        @Html.ValidationMessageFor(model => model.CierreSesion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UltimoMovimiento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UltimoMovimiento, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Id_Sistema, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBox("txt_Sistema", null, new { @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Id_Sistema, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Estatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Estatus)
                        @Html.ValidationMessageFor(model => model.Estatus, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


        </div>
    </div>

    <div class="modal-footer">
        @{
            var ControllerName = ViewContext.RouteData.Values["Controller"];
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" value="Guardar" class="btn btn-success" data-container="body" data-toggle="popover" data-placement="left" data-content="Guardar">
                    <i class="glyphicon glyphicon-ok"></i>
                </button>
                <a class="btn btn-info glyphicon glyphicon-chevron-left" data-container="body" data-toggle="popover" data-placement="right" data-content="Volver" href="/@ControllerName"></a>
            </div>
        </div>
    </div>

}

@section Scripts {
<script type="text/javascript">
    $(document).ready(function () {

        var options = [[]];

        var idCuenta = $('#idCuenta').val();

        $.getJSON("/api/Cuentas/GetCuentas/?" + idCuenta, function (result) {
            for (var i = 0; i < result.length; i++) {
                $('#txt_Cuenta').val(result[i].Cuenta);
            }
        });

        return false;
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {

        var options = [[]];

        var idSistema = $('#idSistema').val();

        $.getJSON("/api/Sistemas/GetNombreSistema/?" + idSistema, function (result) {
            for (var i = 0; i < result.length; i++) {
                $('#txt_Sistema').val(result[i].Nombre);
            }
        });

        return false;
    });
</script>

    <script>
        $(document).ready(function () {
            $('#Id_Cuenta').focus();
        });
    </script>
}
